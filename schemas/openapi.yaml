openapi: 3.0.0
info:
  version: 1.0.0
  title: 
  description: 
  contact:
    name: Haider Abbasi
    email: abbasih3@coventry.ac.uk
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://localhost:5000/api'
    description: Development server
tags:
  - name: Users
    description: API endpoints for user management.
  - name: Dogs
    description: Access and perform CRUD operations on dogs.
  - name: Messages
    description: Endpoint for sending and receiving messages.
paths:
  /users:
    summary: Represents an individual user
    description: >
      This resource represents an individual user in the system.
      Each user is identified by a numeric `id`.
    post:
      tags:
        - Users
      description:
        Create a new user account.
      requestBody:
        description: All new user data.
        required: true
        content:
          application/json:
            schema:
              $ref: ./user.json#/definitions/user
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
              $ref: ./user.json#/definitions/userUpdated
    get:
      tags:
        - Users
      description:
        Get a list of all users.
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                $ref:./user.json#/definitions/userList
        '401':
          description: Only admin users can list all accounts

  /users/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the user
    get:
      tags:
        - Users
      description:
        Get user by id.
      responses:
        '200':
          description: View of user record
          content:
            application/json:
              schema:
                $ref:./user.json#/definitions/userView
        '401':
          description: Non-admin users can only view their own record
        '404':
          description: Not found
    put:
      tags:
        - Users
      description:
        Update user by id.
      requestBody:
        description: Update a visible property or the password.
        required: true
        content:
          application/json:
            schema:
              $ref:./user.json#/definitions/
      responses:
        '200':
          description: Confirmation and link to record.
          content:
            application/json:
              schema:
                $ref:./user.json#/definitions/userUpdated
        '404':
          description: Not found
    delete:
      tags:
        - Users
      description:
        Delete user by id.
      responses:
        '200':
          description: Confirmation of deletion.
          content:
            application/json:
              schema:
                $ref:./user.json#/definitions/userDeleted
        '401':
          description: Only admin users can delete accounts
        '404':
          description: Not found
  
  /users/addtofav/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: object id of the dog
    post:
      tags:
        - Users
      description:
        Create Favourite.
      requestBody:
        description: Add dog to favourite.
        required: true
        content:
          application/json:
            schema:
              $ref:./users.json#/definitions/users
      responses:
        '200':
          description: List of dogs
          content:
            application/json:
              schema:
                $ref:./user.json#/definitions/userFavourites  
        '401':
          description: Not authorised
        '404':
          description: Error adding favourites.
  /users/getfav:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the user
    get:
      tags:
        - Users
      description:
        Get Favourites .
      responses:
        '200':
          description: Get all the favourites
          content:
            application/json:
              schema:
                $ref:./user.json#/definitions/userView
        '401':
          description: Non-admin users can only view their own record
        '404':
          description: Not found

 
  /dogs:
    summary: Represents an individual user
    description: >
      This resource represents an individual user in the system.
      Each user is identified by a numeric `id`.
    get:
      tags:
        - Dogs
      description:
        Get a list of all dogs.
      responses:
        '200':
          description: List of dogs
          content:
            application/json:
              schema:
                $ref:./dogs.json#/definitions/dogsList    
    post:
      tags:
        - Dogs
      description:
        Create new dog.
      requestBody:
        description: Create New dog.
        required: true
        content:
          application/json:
            schema:
              $ref:./dogs.json#/definitions/dogs
      responses:
        '200':
          description: List of dogs
          content:
            application/json:
              schema:
                $ref:./dogs.json#/definitions/userList  
 
  /dogs/update/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
        description: Numeric id of the dogs
    put:
      tags:
        - Dogs
      description:
        Update dogs by id.
      requestBody:
        description: All dogs data.
        required: true
        content:
            application/json:
              schema:
                $ref:./dogs.json#/definitions/dogs  
      responses:
        '200':
          description: View of user record
          content:
            application/json:
              schema:
                $ref:./dogs.json#/definitions/dogsView
        '401':
          description: Non-admin dogs can only view View dogs
        '404':
          description: Not found
   
  /dogs/delete/{id}:
        parameters:
          - in: path
            name: id
            schema:
              type: integer
            required: true
            description: Numeric id of the dogs
        delete:
          tags:
            - Dogs
          description:
            Delete dogs by id.
          responses:
            '200':
              description: Confirmation of deletion.
              content:
                application/json:
                  schema:
                    $ref:./dogs.json#/definitions/userDeleted
            '401':
              description: Only employee  can delete accounts
            '404':
              description: Not found
 
  /messages/createmessage/?{id}:
    summary: Represents an individual user
    description: >
      This resource sending message to specific user.
      Each user is identified by a numeric `id`.
    post:
      tags:
        - Messages
      description:
        Send Messages.
    requestBody:
        description: Send new message.
        required: true
        content:
          application/json:
            schema:
              $ref:./messages.json#/definitions/messages

  /messages/getAllmessages:
    get:
      tags:
        - Messages
      description:
        Get a list of all messages.
      responses:
        '200':
          description: List of Messages
          content:
            application/json:
              schema:
                $ref:./messages.json#/definitions/messageList       
     